<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_graphql_resolver">
    <sys_graphql_resolver action="INSERT_OR_UPDATE">
        <name>Get User</name>
        <schema display_value="Fleet">1f02cc6e2ff051109622bcb62799b6f0</schema>
        <script><![CDATA[(function process(/*ResolverEnvironment*/ env) {
  // By default try to get ID from the query arguments: getStudent(id: ID!)
  // If that is empty then try to use the value from the @source directive
  // in the schema definition.  This allows us to use the same resolver
  // from a query (getUser(id)) or from a nested field (getIncident/assignedTo)
  var sysId = env.getArguments().id || env.getSource();

  var gr = new GlideRecordSecure("sys_user");
  gr.query("sys_id", sysId);

  return gr;
})(env);
]]></script>
        <sys_class_name>sys_graphql_resolver</sys_class_name>
        <sys_created_by>jon.lind</sys_created_by>
        <sys_created_on>2022-07-22 22:43:27</sys_created_on>
        <sys_id>fe1d0d622f3851109622bcb62799b6a6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Get User</sys_name>
        <sys_package display_value="Fleet Vehicle Management" source="x_snc_flt_mgmt">89b467169738d150c6fc7e0e6253af10</sys_package>
        <sys_policy/>
        <sys_scope display_value="Fleet Vehicle Management">89b467169738d150c6fc7e0e6253af10</sys_scope>
        <sys_update_name>sys_graphql_resolver_fe1d0d622f3851109622bcb62799b6a6</sys_update_name>
        <sys_updated_by>jon.lind</sys_updated_by>
        <sys_updated_on>2022-07-22 22:43:27</sys_updated_on>
    </sys_graphql_resolver>
</record_update>
